pipeline {
  agent {
    kubernetes {
      // Use Kubernetes to build our images.
      // Use Img instead of docker so we can build images without access to docker.
      // Note that you must have the secret docker-credentials in your namespace.
      // Note2 you need to run a privileged container which is less insecure than exposing your docke socket.
      defaultContainer 'img'
      yaml """
kind: Pod
metadata:
  annotations:
    container.apparmor.security.beta.kubernetes.io/img: unconfined
    container.seccomp.security.alpha.kubernetes.io/img: unconfined
spec:
  containers:
  - name: img
    image: docker.io/ssilbory/img-builder:latest
    securityContext:
        privileged: true
    imagePullPolicy: Always
    command:
    - sleep
    args:
    - 9999999
    - name: img
      image: r.j3ss.co/img
      imagePullPolicy: Always
      command:
      - sleep
      args:
      - 99999999
    - name: bash
      image: bash:latest
      command:
      - sleep
      args:
      - 9999999
"""
    }
  }
  environment {
      APP_NAME          = 'alpine-tomcat'
  }
  stages {
    stage('Build with Img') {
      // You might want to break this into multiple stages
      steps {
        sh 'echo default container'
        sh 'sh --version'
        // Build container
        sh "img build . -t ${DOCKER_REPO}:${env.BUILD_ID}"
        // You can also auth like this instead of the docker secret.
        // sh "img login -u $REPO_USER -p REPO_PASSWORD"
        //sh "img push ${DOCKER_REPO}:${env.BUILD_ID}"
      }
        container('bash') {
          sh 'echo bash container'
          sh 'sh --version'
}
    }
  }
